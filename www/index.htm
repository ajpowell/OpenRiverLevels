<html>
<head>
<link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.2/leaflet.css" />
<link type="text/css" rel="stylesheet" href="leafletjs/plugins/leaflet.markercluster/dist/MarkerCluster.css" />
<link type="text/css" rel="stylesheet" href="leafletjs/plugins/leaflet.markercluster/dist/MarkerCluster.Default.css" />
<link type="text/css" rel="stylesheet" href="leafletjs/plugins/leaflet.awesome-markers/dist/leaflet.awesome-markers.css" />
<link type="text/css" rel="stylesheet" href="bootstrap/css/bootstrap.min.css" />
<style type="text/css">
   #divHeader { 
     height: 35px;
     background-color: black; 
     color: white;
     font-family:Verdana, Geneva, sans-serif;
     font-size:25px;
     vertical-align: middle;
     line-height: 35px;
   }
   #divContent
   {
    min-height: 100%; 
    height: auto !important; /*Cause footer to stick to bottom in IE 6*/
    height: 100%; 
    margin: 0 auto -50px; /*Allow for footer height*/
    vertical-align:bottom;
   }
   #map
   { 
      height: 100%;
      width: 100%;
   }
   #divFooter, #divPush
   {
    height: 50px; /*Push must be same height as Footer */
    background-color: black;
    position: relative;
    color: white;
   }
</style>
</head>
<body>
<div id="divContent">
  <div id="divHeader">
     OpenRiverLevels
  </div>
  <div id="map"></div>
</div>
<div id="divFooter">
  Data obtained from <a href="http://flooddata.alphagov.co.uk/">flooddata.alphagov.co.uk</a>
</div>

<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"></script>
<script src="http://cdn.leafletjs.com/leaflet-0.7.2/leaflet.js"></script>
<script src="leafletjs/plugins/leaflet.markercluster/dist/leaflet.markercluster.js"></script>
<script src="leafletjs/plugins/leaflet.awesome-markers/dist/leaflet.awesome-markers.min.js"></script>
<script src="bootstrap/js/bootstrap.js"></script>
<link rel="stylesheet" href="font-awesome/css/font-awesome.min.css">
<script>

// Create the markers layer
//var markers = new L.LayerGroup();
var markers = new L.MarkerClusterGroup({spiderfyOnMaxZoom: true, showCoverageOnHover: false, zoomToBoundsOnClick: true});

// Create the map (will fill the 'map' div)
var map = L.map('map', {
                        layers: [markers],
                        maxZoom: 18
                       }).setView([51.861, -1.593],10); 

// Configure the jQuery ajax object
$.ajaxSetup({cache:false});

// Load the tiles into the map
L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
    maxZoom: 18
}).addTo(map);

// Create markers in various colours
var redMarker = L.AwesomeMarkers.icon({
    icon: 'map-marker',
    prefix: 'fa',
    markerColor: 'red'
  });
var blackMarker = L.AwesomeMarkers.icon({
    icon: 'map-marker',
    prefix: 'fa',
    markerColor: 'black'
  });
var orangeMarker = L.AwesomeMarkers.icon({
    icon: 'map-marker',
    prefix: 'fa',
    markerColor: 'orange'
  });

// Using jQuery ajax, pull in the sites as a json array
//$.getJSON("../riverlevels/get_sites_evenlode.php", function (data) {
$.getJSON("orlapi/get_sites.php", function (data) {
  // Loop through each site and add marker to markers layer
  for (var i = 0; i < data.length; i++) {
//      console.log(data[i].siteid);

      var location = new L.LatLng(data[i].lat, data[i].lon);
      var sitename = data[i].sitename;
      var river = data[i].river;
      var siteid = data[i].siteid;
      var status = data[i].status;
      var read_time = data[i].read_time;
      var level = data[i].level;
      var excess = data[i].excess;
      
      var statusMarker;
      
      if (status == 'high') {
        statusMarker = redMarker;
      }
      else {
        if (status == 'warning') {
           statusMarker = orangeMarker;
        }
        else {
           statusMarker = blackMarker;
        }
      }
      
      var markerText = "<b>" + sitename + "</b><br>" + river + "<br>" + level + "m ";
      if (excess != '0') {
          markerText = markerText + "(" + excess + "m over maximum)"
      }
          markerText = markerText + "<br><small>Read: " + read_time + "</small><br><small>(siteid:" + siteid + ")</small>";

      //markers.addLayer( new L.Marker(location, { title: sitename }));
      markers.addLayer( new L.Marker(location, { title: sitename, icon: statusMarker }).bindPopup(
                 markerText));
    }
  }).fail(function() {
    console.log( ".getJSON error..." );
  });

// Add the markers layer to the map
  map.addLayer(markers);
//var marker = L.marker([51.861, -1.593],{title: 'Test', icon: blueMarker}).addTo(map);

</script>
</body>
</html>
